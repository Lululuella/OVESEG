// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pairwise_tstat_unscaled
NumericMatrix pairwise_tstat_unscaled(NumericMatrix ymean, NumericMatrix stdevUnscaled);
RcppExport SEXP _OVESEG_pairwise_tstat_unscaled(SEXP ymeanSEXP, SEXP stdevUnscaledSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type ymean(ymeanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type stdevUnscaled(stdevUnscaledSEXP);
    rcpp_result_gen = Rcpp::wrap(pairwise_tstat_unscaled(ymean, stdevUnscaled));
    return rcpp_result_gen;
END_RCPP
}
// pvalue_weighted_est
NumericVector pvalue_weighted_est(NumericVector tt, NumericVector ttperm, NumericVector w);
RcppExport SEXP _OVESEG_pvalue_weighted_est(SEXP ttSEXP, SEXP ttpermSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt(ttSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ttperm(ttpermSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(pvalue_weighted_est(tt, ttperm, w));
    return rcpp_result_gen;
END_RCPP
}
// row_min
NumericVector row_min(NumericMatrix Y);
RcppExport SEXP _OVESEG_row_min(SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(row_min(Y));
    return rcpp_result_gen;
END_RCPP
}
// row_which_max
IntegerVector row_which_max(NumericMatrix Y);
RcppExport SEXP _OVESEG_row_which_max(SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(row_which_max(Y));
    return rcpp_result_gen;
END_RCPP
}
// shuffle_topm
List shuffle_topm(NumericMatrix y, IntegerVector group, Nullable<NumericMatrix> weights, IntegerMatrix combM, IntegerVector geneSubset, int seed);
RcppExport SEXP _OVESEG_shuffle_topm(SEXP ySEXP, SEXP groupSEXP, SEXP weightsSEXP, SEXP combMSEXP, SEXP geneSubsetSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericMatrix> >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type combM(combMSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type geneSubset(geneSubsetSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(shuffle_topm(y, group, weights, combM, geneSubset, seed));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OVESEG_pairwise_tstat_unscaled", (DL_FUNC) &_OVESEG_pairwise_tstat_unscaled, 2},
    {"_OVESEG_pvalue_weighted_est", (DL_FUNC) &_OVESEG_pvalue_weighted_est, 3},
    {"_OVESEG_row_min", (DL_FUNC) &_OVESEG_row_min, 1},
    {"_OVESEG_row_which_max", (DL_FUNC) &_OVESEG_row_which_max, 1},
    {"_OVESEG_shuffle_topm", (DL_FUNC) &_OVESEG_shuffle_topm, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_OVESEG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
